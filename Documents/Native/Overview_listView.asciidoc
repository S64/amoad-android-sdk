== AMoAdネイティブ広告（SDK for Android） 概要 - listView
=== ネイティブ広告の種類
表示広告種類は、画像の有無、テキストの長さなどによって、以下の3タイプあります。

.ネイティブ広告の種類
|===
|広告枠フォーマット |表示広告種類 |要素 |リソース型
.11+|リストビュー .2+|一行テキスト|テキスト（ショート） |TextView
|サービス名 |TextView
.4+|アイコン画像＋テキスト |アイコン画像 |ImageView
|テキスト（ショート） | TextView
|テキスト（ロング） | TextView
|サービス名 |TextView
.5+| メイン画像＋テキスト |メイン画像 |ImageView
|アイコン画像 |ImageView
|テキスト（ショート） |TextView
|テキスト（ロング） |TextView
|サービス名 |TextView
|===

.アイコン画像＋テキストの例
image:https://qiita-image-store.s3.amazonaws.com/1726/60244/b62232fc-b88e-a36a-d6af-f531a18ac086.png[
"アイコン画像＋テキスト", width=320]

=== 表示位置のコントロール
広告枠フォーマット「リストビュー」は、管理画面より開始位置と間隔を指定して、
広告の表示位置と頻度をコントロールできます。

.管理画面
image:images/n-admin-02.png[
"管理画面", width=320]
[TIP]
「広告取得数」はSDK内部で同時に取得する件数です。
広告表示速度と広告のばらつきに影響しますので調整してください。
1では（効果の高い）同じ広告ばかり表示されることがあります。

=== sidとは？
管理画面で広告枠を作成したときに発行されるIDです。
SDKの機能を呼び出すために複数の箇所から参照しますので、
文字列定数などに保持しておくことをお勧めします。

=== SDKの使い方
SDKへのアクセスは広告表示マネージャ（AMoAdNativeViewManager）を
使って行います。

Step 1 広告表示マネージャの準備::
prepareAdメソッドを呼び出して広告表示の準備をする。
この時点で広告サーバに広告情報をリクエストします
（画像をプリロードすることもできます）。

Step 2 広告用のAapterを作成する::
AMoAdNativeViewManager.getInstance().createAdapter(...)で
広告用のAapterを生成する。createAdapterメソッドに渡すレイアウトIDはあらかじめ用意しておきます。

Step 3 リストビューに広告用のAdapterを登録する::
setAdapterメソッドで広告用Adapterを登録する
広告表示用のレイアウトファイルは、あらかじめ用意しておきます。

IMPORTANT: 詳細は Native SDK Guide for Android を参照ください。
